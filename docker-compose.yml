version: "3.9"
services:
  redis:
    #https://hub.docker.com/_/redis
    container_name: gigs_redis_container
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      # ./docker-volumes/cache is the directory in host machine which will be used to store data, /data is the directory of the container
      - ./docker-volumes/cache:/data
  mongo:
    #https://hub.docker.com/_/mongo
    container_name: gigs_mongodb_container
    image: mongo
    restart: always
    ports:
      - 27017:27017
    #We don't need username and pwd for local setup
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: 12345678
    volumes:
      - ./docker-volumes/data:/data/db
  mysql:
    container_name: gigs_mysql_container
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER=navi
      - MYSQL_DATABASE=gigs_auth
      - MYSQL_ROOT_PASSWORD=navi1234
      - MYSQL_PASSWORD=navi4321
    ports:
      - "3306:3306"
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql

  postgres:
    container_name: gigs_postgres_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=navi
      - POSTGRES_PASSWORD=navi1234
      - POSTGRES_DB=gigs_reviews
    ports:
      - "5432:5432"
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql

  rabbitmq:
    container_name: gigs_rabbitmq_container
    # This rabbitmq image provides both MQ and management console
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=navi
      - RABBITMQ_DEFAULT_PASS=navi1234
    ports:
      # AMQP protocol port
      - "5672:5672"
      # Management UI
      - "15672:15672"
      ## We are not going to have store for rabbitMQ

  elasticsearch:
    container_name: gigs_elasticsearch_container
    # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: "true"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
      xpack.security.authc.token.enabled: "true"
      ELASTIC_PASSWORD: navi2308
    ports:
      - 9300:9300
      - 9200:9200
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

networks:
  elastic:
    name: elastic
